name: CI

on:
  push:
    branches: [ main ]
    tags: '*'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version: [ '1' ]
        os: [ ubuntu-latest ]
        arch: [ x64 ]
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v5
        with:
          files: lcov.info

  docs-pdf:
    name: Build docs and export PDF (no deploy)
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4

      # Minimal system deps: drop full OpenGL stack and swapfile
      - name: Install minimal headless deps
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb libgl1
          # often enough for headless build; avoids heavy xorg-dev bundle

      - name: Setup Julia
        uses: julia-actions/setup-julia@v2
        with:
          version: '1'

      - name: Julia cache
        uses: julia-actions/cache@v2

      # Make the docs env aware of the package, then instantiate once
      - name: Prepare docs environment
        run: |
          julia --project=docs -e 'using Pkg; Pkg.develop(path="."); Pkg.instantiate(); Pkg.precompile()'

      # Build docs only. No doctest. No deployment.
      # Xvfb keeps GLMakie happy without pulling full X stack.
      - name: Build docs (no deploy)
        env:
          DISPLAY: :0
        run: |
          xvfb-run -s "-screen 0 1024x768x24" julia --project=docs docs/make.jl

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: docs/package-lock.json

      - name: Install PDF exporter
        run: |
          cd docs
          [ -f package.json ] || npm init -y
          npm i -D vitepress-export-pdf puppeteer

      - name: Export PDF
        working-directory: docs
        run: |
          npx press-export-pdf export . --out-file JutulDarcy-docs.pdf

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: JutulDarcy-docs
          path: docs/JutulDarcy-docs.pdf
          if-no-files-found: error
